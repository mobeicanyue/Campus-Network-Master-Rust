name: Release

on:
  push:
    tags:
      - 'v*.*.*' 

  workflow_dispatch:

jobs:
  release:
    name: Cross build for ${{ matrix.release-name }}
    runs-on: ${{ matrix.os }}
    env:
      build_filename: campus-network-master${{matrix.suffix}}
      new_filename: 20200XXXXXXXX;114514${{matrix.suffix}}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release-name: x86_64-linux
            suffix: ""

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release-name: arm64-linux
            suffix: ""

          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            release-name: armv7-linux-eabihf
            suffix: ""

          # apple
          - os: macos-latest
            target: x86_64-apple-darwin
            release-name: x86_64-macos
            suffix: ""

          - os: macos-latest
            target: aarch64-apple-darwin
            release-name: arm64-macos
            suffix: ""

          # windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            release-name: x86_64-windows
            suffix: .exe

          - os: windows-latest
            # Many compilation tools have insufficient support for arm64 windows
            target: aarch64-pc-windows-msvc
            release-name: arm64-windows
            suffix: .exe

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Release
        run: |
          cross build --release --locked --target ${{ matrix.target }} 

      - name: Modify Filename
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{env.build_filename}} "target/${{ matrix.target }}/release/${{env.new_filename}}"
      - name: Modify Filename (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move target\${{ matrix.target }}\release\${{env.build_filename}} "target\${{ matrix.target }}\release\${{env.new_filename}}"

      - uses: actions/upload-artifact@v3
        with:
          path: |
            target/${{ matrix.target }}/release/${{env.new_filename}}

      - name: Zip Release Artifact
        uses: TheDoctor0/zip-release@0.7.1
        with:
          type: zip
          filename: ${{ matrix.release-name }}.zip
          directory: target/${{ matrix.target }}/release/
          path: |
            ${{env.new_filename}}

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target }}/release/${{ matrix.release-name }}.zip
          generate_release_notes: true
          draft: true