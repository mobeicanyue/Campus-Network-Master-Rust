name: Release

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:

jobs:
  pre-release:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: BaileyJM02/markdown-to-pdf@v1
        with:
          input_path: README.md
          output_dir: README.pdf
          build_html: false

      - name: List files in working directory
        run: ls -R

      - uses: actions/upload-artifact@v3
        with:
          name: README.pdf
          path: README.pdf

  release:
    needs: pre-release
    name: Cross build for ${{ matrix.release-name }}
    runs-on: ${{ matrix.os }}
    env:
      build_filename: campus-network-master${{matrix.suffix}}
      new_filename: 20200XXXXXXXX;114514${{matrix.suffix}}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release-name: LogInCQNU-Linux-x86_64
            suffix: ""

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release-name: LogInCQNU-Linux-arm64
            suffix: ""

          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            release-name: LogInCQNU-Linux-armv7-eabihf
            suffix: ""

          - os: ubuntu-latest
            target: aarch64-linux-android
            release-name: LogInCQNU-Android-arm64
            suffix: ""

          # apple
          - os: macos-latest
            target: x86_64-apple-darwin
            release-name: LogInCQNU-MacOS-x86_64
            suffix: ""

          - os: macos-latest
            target: aarch64-apple-darwin
            release-name: LogInCQNU-MacOS-arm64
            suffix: ""

          # windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            release-name: LogInCQNU-Windows-x86_64
            suffix: .exe

          - os: windows-latest
            # Many compilation tools have insufficient support for arm64 windows
            target: aarch64-pc-windows-msvc
            release-name: LogInCQNU-Windows-arm64
            suffix: .exe

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Release
        run: |
          cross build --release --locked --target ${{ matrix.target }}

      - name: Strip (x86_64)
        if: contains(matrix.target, 'x86_64')
        continue-on-error: true
        run: |
          strip target/${{ matrix.target }}/release/${{env.build_filename}}

      - name: Compress binaries by UPX
        # Upx may not support some platforms. Ignore the errors
        continue-on-error: true
        if: matrix.target != 'aarch64-pc-windows-msvc'
        uses: svenstaro/upx-action@v2
        with:
          strip: false
          args: -q --best --ultra-brute --no-lzma
          files: |
            target/${{ matrix.target }}/release/${{env.build_filename}}

      - name: Modify Filename
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{env.build_filename}} "target/${{ matrix.target }}/release/${{env.new_filename}}"
      - name: Modify Filename (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move target\${{ matrix.target }}\release\${{env.build_filename}} "target\${{ matrix.target }}\release\${{env.new_filename}}"

      - uses: actions/download-artifact@v3
        with:
          name: README.pdf
          path: target/${{ matrix.target }}/release/

      - name: Get tag name
        if: matrix.os != 'windows-latest'
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Get tag name (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $env:TAG_NAME = $env:GITHUB_REF -replace '^refs/tags/v'
          echo "TAG_NAME=$env:TAG_NAME" >> $env:GITHUB_ENV

      - name: List files in working directory
        run: ls -R

      - name: Zip Release Artifact
        uses: TheDoctor0/zip-release@0.7.1
        with:
          type: zip
          filename: ${{ matrix.release-name }}-${{ env.TAG_NAME }}.zip
          directory: target/${{ matrix.target }}/release/
          path: |
            ${{env.new_filename}}
            README.pdf

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target }}/release/${{ matrix.release-name }}-${{ env.TAG_NAME }}.zip
          generate_release_notes: true
          draft: true